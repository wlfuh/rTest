setwd("~/rTest")
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(10000,0.5)
predcs
tmp
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(10000,0.5)
abc
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(10000,0.5)
a <- Inf
a
a > 1
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(10000,0.5)
most_probable
most_probable
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(10000,0.5)
most_probable
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(10000,0.5)
most_probable$assigned
most_probable$iter
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
source('~/rTest/scripts/test_hungarian_real_data.R')
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(10000,0.5)
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(10000,0.5)
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(10000,0.5)
abc
mean(abc)
mean(abc$V1)
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(10000,0.5)
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(10000,0.5)
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
find_probable()
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
find_probable()
abc
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable()
?cor
most <- find_probable()
random <- find_probable(10000,0.5)
most$assign_error
random$assign_error
most$assigned
random$assigned
merge(random$assigned, most$assigned, by=c('nucleus'))
random <- find_probable(10000,0.5)
predcs
refdata[apply(predcs_prob, 1, which.max),"cs"]
refdata
refdata[apply(predcs_prob, 1, which.max),"cs"]
refdata$cs
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
plot_probable_byscale()
plot_probable_byscale(10)
plot_probable_byscale(10)
source('~/rTest/scripts/test_hungarian_real_data.R')
plot_probable_byscale(10)
plot_probable_byscale(100)
plot_probable_byscale(1000)
plot_probable_byscale(5000)
plot_probable_byscale(5000)
plot_probable_byscale(10000)
find_probable()
find_probable()
abc
find_probable()
masterlist
find_probable()
apply(predcs_prob, 1, which.max)
predcs_prob[1,272]
predcs_prob[1,271]
predcs_prob[1,]
predcs_prob[2,]
most <- find_probable()
most$cs
most$assigned
merge(most$cs, most$assigned, by=c('nucleus'))
merge(most$assigned, most$cs, by=c('nucleus'))
merge(most$cs, most$assigned, by=c('nucleus'))
most$assigned
source('~/rTest/scripts/test_hungarian_real_data.R')
source('~/rTest/scripts/test_hungarian_real_data.R')/cor
?cor
source('~/rTest/scripts/test_hungarian_real_data.R')
source('~/rTest/scripts/test_hungarian_real_data.R')
source('~/rTest/scripts/test_hungarian_real_data.R')
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable()
find_probable()
find_probable()
abc
mean(abc$V!)
mean(abc$V1)
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
find_probable()
find_probable()
mean(abc$V1, na.rm=TRUE)
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
find_probable()
predcs
predcs[nucleus=="C2'",]
predcs$nucleus
predcs[predcs$nucleus=="C2'",]
cor(1:10, 2:11)
cor(1:10, 2:12)
find_probable()
tmp
head(tmp)
abc
ddply(.data = tmp, .variables = c("nucleus"), .fun = function(x){mean(abs(x$cs.x-x$assigned))})
tmp[tmp$nucleus=="C2",]
tmp[tmp$nucleus=="C2"]
tmp[tmp$nucleus=="C2",]
tmp[tmp$nucleus=="C2'",]
tmp[tmp$nucleus=="C2",]
plot_probable_byscale(5000)
debugSource('~/rTest/scripts/test_hungarian_real_data.R')
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(method='cor')
find_probable(method="cor")
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(method="mean")
source('~/rTest/scripts/test_hungarian_real_data.R')
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(method="stderr")
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(method="stderr")
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable(method="stderr")
source('~/rTest/scripts/test_hungarian_real_data.R')
source('~/rTest/scripts/test_hungarian_real_data.R')
source('~/rTest/scripts/test_hungarian_real_data.R')
range01 <- function(x){ (x - min(x))/(max(x)-min(x)) * maxscale }
scales <- range01(1:1)
range01 <- function(x){ (x - min(x))/(max(x)-min(x)) * 1 }
scales <- range01(1:1)
scales
1:1
range01(1:1)
source('~/rTest/scripts/test_hungarian_real_data.R')
hung_trials(1,10,1)
hung_trials(1,1,10)
hung_trials(1,1,50000)
find_probable(50000,1)
load("~/rTest/output/1scale_1inc_50000iter.RData")
predcs_prob <- masterlist[[paste("scale",s,sep="")]]$probs
predcs$assigned <- refdata[apply(predcs_prob, 1, which.max),"cs"]
tmp <- merge(refdata, predcs, by=c("resid","nucleus"))
predcs_prob <- masterlist$scale1$probs
predcs$assigned <- refdata[apply(predcs_prob, 1, which.max),"cs"]
tmp <- merge(refdata, predcs, by=c("resid","nucleus"))
source('~/rTest/scripts/test_hungarian_real_data.R')
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable()
find_probable_special()
source('~/rTest/scripts/test_hungarian_real_data.R')
find_probable_special()
find_probable_special("cor")
find_probable_special("stderr")
load("~/rTest/output/1scale_1inc_50000iter.RData")
predcs_prob <- masterlist$scale1$probs
predcs$assigned <- refdata[apply(predcs_prob, 1, which.max),"cs"]
tmp <- merge(refdata, predcs, by=c("resid","nucleus"))
apply(predcs_prob, 1, which.max)
